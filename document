// Задача 1: Удвоение чисел в массиве
// Условие: Дан массив чисел. Верните новый массив, где каждое число удвоено.

// Код:

// const numbers = [2, 4, 6, 8];

// console.log(doubled); // [4, 8, 12, 16]

// Задача 2: Вытащить определённые значения из массива объектов
// Условие: Дан массив объектов с информацией о пользователях. Верните массив с именами пользователей.
// const users = [
//     { id: 1, name: "Alice", age: 25 },
//     { id: 2, name: "Bob", age: 30 },
//     { id: 3, name: "Charlie", age: 35 }
//   ];

//   console.log(names); // ["Alice", "Bob", "Charlie"]


// Задача 3:Фильтрация положительных чисел.
// Дан массив чисел. Нужно написать функцию которая будет отфильтровать только положительные числа.
// Пример:
// const numbers = [-10, 15, 0, -7, 30, 5, -3];

// console.log(filterPositiveNumbersArray(numbers));
// Ожидаемый результат: [15, 30, 5]

// Задача 4:Фильтрация слов по длине
// Дан массив строк. Нужно написать функцию которая оставит только те строки,
//  длина которых больше 5 символов.
// Пример:
// const words = ["apple", "banana", "cherry", "kiwi", "grape"];

// function filterLongWords (arr){

// }
// console.log(filterLongWords(words));
// Ожидаемый результат: ["banana", "cherry"]


// Задача 5:Фильтрация строк с определённым символом
// Дан массив строк.Нужно написать функцию которая оставить только те строки,
//  которые содержат букву "a".

// Пример:
// const words = ["cat", "dog", "elephant", "tiger", "lion"];
    // function filterWordsByCharacter (arr){
        
    // }
    // console.log(filterWordsByCharacter(words));
// Ожидаемый результат: ["cat", "elephant", "tiger"]



// 6. Сумма чисел массива
// Задача: Используйте метод `reduce`, чтобы найти сумму всех чисел в массиве.  

// const numbers = [1, 2, 3, 4, 5];
// Ожидаемый результат: 15


// Подсказка: Начальное значение аккумулятора установите равным `0`.

// 7. Найти самое длинное слово в массиве
// Задача: Используйте метод `reduce`, чтобы найти самое длинное слово в массиве строк.  

// const words = ["apple", "banana", "cherry", "watermelon"];
// Ожидаемый результат: "watermelon"


// Подсказка: Сравнивайте длину текущего слова с длиной слова в аккумуляторе.


// 8. Разделение массива на части
// Задача: Используйте метод `slice`, чтобы разбить массив на подмассивы заданного размера.  
// const array = [1, 2, 3, 4, 5, 6, 7, 8];
// const chunkSize = 3;
// Ожидаемый результат: [[1, 2, 3], [4, 5, 6], [7, 8]]

// Подсказка: Используйте цикл `for` вместе с `slice`, чтобы извлекать части массива.

// 9. Подсчет частоты элементов
// Задача:Используйте метод `reduce`, чтобы подсчитать, сколько раз каждый элемент встречается в массиве.  

// const items = ["apple", "banana", "apple", "orange", "banana", "apple"];
// Ожидаемый результат: { apple: 3, banana: 2, orange: 1 }

// Подсказка: Аккумулятором будет объект, где ключи — это элементы массива, а значения — их количество.



// 10. Удаление дубликатов
// Задача: Используйте метод `reduce`, чтобы удалить дубликаты из массива.  
// const array = [1, 2, 3, 2, 4, 1, 5, 3];
// Ожидаемый результат: [1, 2, 3, 4, 5]

// Проверяйте наличие элемента в аккумуляторе перед добавлением.
























// Задача 1: Создание объекта с методом

// Создайте объект `person`, который содержит свойства `name` и `age`. Напишите метод `greet`, который выводит "Привет, меня зовут [имя], мне [возраст] лет".


// const person = { name: "Иван", age: 30 };

// function greet() {
//   return;
// }

// console.log(person.greet());
// Ожидаемый результат: "Привет, меня зовут Иван, мне 30 лет"


// Задача 2: Изменение значения в объекте

// Дан объект `book`, который содержит поля `title` и `author`. Напишите метод `updateTitle`, который обновляет поле `title` на новое значение.


// const book = { title: "Война и мир", author: "Лев Толстой" };

// function updateTitle(newTitle) {
//   return;
// }

// console.log(book.title);
// Ожидаемый результат: "Война и мир"

// Задача 3: Добавление свойства в объект

// Создайте объект `student` с полями `name` и `age`. Добавьте метод `addGrade`, который добавляет оценку в массив `grades`.

// const student = { name: "Анна", age: 22, grades: [4, 5, 3] };

// function addGrade(grade) {
//   return;
// }

// console.log(student.grades);
// Ожидаемый результат: [4, 5, 3, 5]



// Задача 4: Удаление свойства объекта

// Создайте объект `car`, который содержит поля `brand` и `model`. Напишите метод `removeModel`, который удаляет свойство `model` из объекта.

// javascript
// const car = { brand: "Toyota", model: "Corolla" };

// function removeModel() {
//   return;
// }

// console.log(car.model);
// Ожидаемый результат: undefined


// Задача 5: Метод для получения полной информации

// Создайте объект `movie` с полями `title`, `director`, `releaseYear`. Напишите метод `getFullInfo`, который возвращает строку вида "Фильм: [название], Режиссер: [режиссер], Год выпуска: [год]".


// const movie = { title: "Интерстеллар", director: "Кристофер Нолан", releaseYear: 2014 };

// function getFullInfo() {
//   return;
// }

// console.log(movie.getFullInfo());
// Ожидаемый результат: "Фильм: Интерстеллар, Режиссер: Кристофер Нолан, Год выпуска: 2014"


// Задача 6: Изменение значения по ключу

// Создайте объект `person` с полями `name` и `age`. Напишите метод `updateAge`, который изменяет значение поля `age`.

// const person = { name: "Максим", age: 28 };

// function updateAge(newAge) {
//   return;
// }

// console.log(person.age);
// Ожидаемый результат: новое значение возраста




// Задача 7: Проверка наличия свойства в объекте

// Создайте объект `product` с полями `name` и `price`. Напишите метод `hasProperty`, который проверяет, существует ли заданное свойство в объекте.


// const product = { name: "Laptop", price: 1500 };

// function hasProperty(prop) {
//   return;
// }

// console.log(product.hasProperty("price"));
// Ожидаемый результат: true


// Задача 8: Итерация по ключам объекта

// Создайте объект `person` с полями `name`, `age`, `city`. Напишите метод, который выводит все ключи объекта.

// javascript
// const person = { name: "Елена", age: 25, city: "Москва" };

// function showKeys() {
//   return;
// }

// console.log(person.showKeys());
// Ожидаемый результат: ["name", "age", "city"]




// Задача 9: Вывод значений объекта

// Создайте объект `car` с полями `brand` и `model`. Напишите метод, который выводит все значения объекта.

// javascript
// const car = { brand: "BMW", model: "X5" };

// function showValues() {
//   return;
// }

// console.log(car.showValues());
// Ожидаемый результат: ["BMW", "X5"]




// Задача 10: Проверка типа значения

// Создайте объект `data` с полями `name` и `age`. Напишите метод `isNameString`, который проверяет, является ли значение `name` строкой.

// const data = { name: "Сергей", age: 30 };

// function isNameString() {
//   return;
// }

// console.log(data.isNameString());
// Ожидаемый результат: true



// Задача 11: Модификация массива в объекте

// Создайте объект `student` с полями `name` и `grades`. Напишите метод `addGrade`, который добавляет новую оценку в массив `grades`.

// const student = { name: "Ирина", grades: [4, 5, 3] };

// function addGrade(newGrade) {
//   return;
// }

// console.log(student.grades);
// Ожидаемый результат: [4, 5, 3, 4]


// Задача 12: Вычисление суммы всех значений в объекте

// Создайте объект `expenses`, который содержит ключи `food`, `transport`, `entertainment`. Напишите метод `getTotalExpenses`, который вычисляет общую сумму всех расходов.


// const expenses = { food: 200, transport: 50, entertainment: 100 };

// function getTotalExpenses() {
//   return;
// }

// console.log(expenses.getTotalExpenses());
// Ожидаемый результат: 350

// Задача 13: Проверка всех значений

// Создайте объект `user` с полями `isActive` и `hasPermission`. Напишите метод `hasValidStatus`, который проверяет, активен ли пользователь и есть ли у него разрешение.


// const user = { isActive: true, hasPermission: true };

// function hasValidStatus() {
//   return;
// }

// console.log(user.hasValidStatus());
// Ожидаемый результат: true


// Задача 14: Копирование объекта

// Создайте объект `original`, который содержит поля `name` и `age`. Напишите метод `clone`, который создает и возвращает копию объекта.

// const original = { name: "Кирилл", age: 32 };

// function clone() {
//   return;
// }

// console.log(original.clone());
// Ожидаемый результат: { name: "Кирилл", age: 32 }



// Задача 15: Преобразование объекта в строку**

// Создайте объект `person` с полями `name`, `age` и `city`. Напишите метод `toString`, который возвращает строку в формате "Name: [имя], Age: [возраст], City: [город]".

// const person = { name: "Ольга", age: 26, city: "Санкт-Петербург" };

// function toString() {
//   return;
// }

// console.log(person.toString());
// Ожидаемый результат: "Name: Ольга, Age: 26, City: Санкт-Петербург"